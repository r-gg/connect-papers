{
  "papers_dict_list": [{"node_id": 0, "title": "ServerMore: Opportunistic Execution of Serverless Functions in the Cloud"}, {"node_id": 1, "title": "Locality-aware Load-Balancing For Serverless Clusters"}, {"node_id": 2, "title": "Deep reinforcement learning for application scheduling in resource-constrained, multi-tenant serverless computing environments"}, {"node_id": 3, "title": "Automated Fine-Grained CPU Cap Control in Serverless Computing Platform"}, {"node_id": 4, "title": "A Model Predictive Controller for Managing QoS Enforcements and Microarchitecture-Level Interferences in a Lambda Platform"}, {"node_id": 5, "title": "FaaSRank: Learning to Schedule Functions in Serverless Platforms"}, {"node_id": 6, "title": "SIMPPO: A scalable and incremental online learning framework for serverless resource management"}, {"node_id": 7, "title": "Data-Intensive Workload Consolidation in Serverless (Lambda/FaaS) Platforms"}, {"node_id": 8, "title": "Understanding, predicting and scheduling serverless workloads under partial interference"}, {"node_id": 9, "title": "ENSURE: Efficient Scheduling and Autonomous Resource Management in Serverless Environments"}, {"node_id": 10, "title": "Interference Analysis of Co-Located Container Workloads: A Perspective from Hardware Performance Counters"}, {"node_id": 11, "title": "BeeFlow: Behavior Tree-based Serverless Workflow Modeling and Scheduling for Resource-Constrained Edge Clusters"}, {"node_id": 12, "title": "FaaSFlow: enable efficient workflow execution for function-as-a-service"}, {"node_id": 13, "title": "SLO beyond the Hardware Isolation Limits"}, {"node_id": 14, "title": "CoPart: Coordinated Partitioning of Last-Level Cache and Memory Bandwidth for Fairness-Aware Workload Consolidation on Commodity Servers"}, {"node_id": 15, "title": "PARTIES: QoS-Aware Resource Partitioning for Multiple Interactive Services"}, {"node_id": 16, "title": "CLITE: Efficient and QoS-Aware Co-Location of Multiple Latency-Critical Jobs for Warehouse Scale Computers"}, {"node_id": 17, "title": "Supporting Multi-Cloud in Serverless Computing"}, {"node_id": 18, "title": "Alioth: A Machine Learning Based Interference-Aware Performance Monitor for Multi-Tenancy Applications in Public Cloud"}, {"node_id": 19, "title": "Alita: Comprehensive Performance Isolation through Bias Resource Management for Public Clouds"}, {"node_id": 20, "title": "Kronos: towards bus contention-aware job scheduling in warehouse scale computers"}, {"node_id": 21, "title": "A Case of Multi-Resource Fairness for Serverless Workflows (Work In Progress Paper)"}, {"node_id": 22, "title": "FnSched: An Efficient Scheduler for Serverless Functions"}, {"node_id": 23, "title": "EyeQ: practical network performance isolation for the multi-tenant cloud"}, {"node_id": 24, "title": "Owl: performance-aware scheduling for resource-efficient function-as-a-service cloud"}, {"node_id": 25, "title": "Towards performance isolation in multi-tenant SaaS applications"}, {"node_id": 26, "title": "Performance isolation and fairness for multi-tenant cloud storage"}, {"node_id": 27, "title": "PerfIso: Performance Isolation for Commercial Latency-sensitive Services"}, {"node_id": 28, "title": "Optimizing Serverless Computing: Introducing an Adaptive Function Placement Algorithm"}, {"node_id": 29, "title": "Automated control of multiple virtualized resources"}, {"node_id": 30, "title": "Autothrottle: Satisfying Network Performance Requirements for Containers"}, {"node_id": 31, "title": "Ah-Q: Quantifying and Handling the Interference within a Datacenter from a System Perspective"}, {"node_id": 32, "title": "EyeQ: Practical network performance isolation at the edge"}],
  "ok_and_fixed" : ["ServerMore: Opportunistic Execution of Serverless Functions in the Cloud", "Locality-aware Load-Balancing For Serverless Clusters", "Deep reinforcement learning for application scheduling in resource-constrained, multi-tenant serverless computing environments", "Automated Fine-Grained CPU Cap Control in Serverless Computing Platform", "A Model Predictive Controller for Managing QoS Enforcements and Microarchitecture-Level Interferences in a Lambda Platform", "FaaSRank: Learning to Schedule Functions in Serverless Platforms", "SIMPPO: A scalable and incremental online learning framework for serverless resource management", "Data-Intensive Workload Consolidation in Serverless (Lambda/FaaS) Platforms", "Understanding, predicting and scheduling serverless workloads under partial interference", "ENSURE: Efficient Scheduling and Autonomous Resource Management in Serverless Environments", "Interference Analysis of Co-Located Container Workloads: A Perspective from Hardware Performance Counters", "BeeFlow: Behavior Tree-based Serverless Workflow Modeling and Scheduling for Resource-Constrained Edge Clusters", "FaaSFlow: enable efficient workflow execution for function-as-a-service", "SLO beyond the Hardware Isolation Limits", "CoPart: Coordinated Partitioning of Last-Level Cache and Memory Bandwidth for Fairness-Aware Workload Consolidation on Commodity Servers", "PARTIES: QoS-Aware Resource Partitioning for Multiple Interactive Services", "CLITE: Efficient and QoS-Aware Co-Location of Multiple Latency-Critical Jobs for Warehouse Scale Computers", "Supporting Multi-Cloud in Serverless Computing", "Alioth: A Machine Learning Based Interference-Aware Performance Monitor for Multi-Tenancy Applications in Public Cloud", "Alita: Comprehensive Performance Isolation through Bias Resource Management for Public Clouds", "Kronos: towards bus contention-aware job scheduling in warehouse scale computers", "A Case of Multi-Resource Fairness for Serverless Workflows (Work In Progress Paper)", "FnSched: An Efficient Scheduler for Serverless Functions", "EyeQ: practical network performance isolation for the multi-tenant cloud", "Owl: performance-aware scheduling for resource-efficient function-as-a-service cloud", "Towards performance isolation in multi-tenant SaaS applications", "Performance isolation and fairness for multi-tenant cloud storage", "PerfIso: Performance Isolation for Commercial Latency-sensitive Services", "Optimizing Serverless Computing: Introducing an Adaptive Function Placement Algorithm", "Automated control of multiple virtualized resources", "Autothrottle: Satisfying Network Performance Requirements for Containers", "Ah-Q: Quantifying and Handling the Interference within a Datacenter from a System Perspective", "EyeQ: Practical network performance isolation at the edge"],
  "edges": [{"from": 32, "to": 23, "arrows": "to"}, {"from": 30, "to": 32, "arrows": "to"}, {"from": 0, "to": 22, "arrows": "to"}, {"from": 0, "to": 15, "arrows": "to"}, {"from": 0, "to": 27, "arrows": "to"}, {"from": 1, "to": 0, "arrows": "to"}, {"from": 1, "to": 5, "arrows": "to"}, {"from": 1, "to": 0, "arrows": "to"}, {"from": 1, "to": 9, "arrows": "to"}, {"from": 1, "to": 22, "arrows": "to"}, {"from": 2, "to": 1, "arrows": "to"}, {"from": 2, "to": 24, "arrows": "to"}, {"from": 2, "to": 1, "arrows": "to"}, {"from": 2, "to": 5, "arrows": "to"}, {"from": 2, "to": 9, "arrows": "to"}, {"from": 2, "to": 28, "arrows": "to"}, {"from": 2, "to": 3, "arrows": "to"}, {"from": 3, "to": 29, "arrows": "to"}, {"from": 3, "to": 4, "arrows": "to"}, {"from": 2, "to": 3, "arrows": "to"}, {"from": 30, "to": 3, "arrows": "to"}, {"from": 7, "to": 3, "arrows": "to"}, {"from": 28, "to": 4, "arrows": "to"}, {"from": 21, "to": 4, "arrows": "to"}, {"from": 3, "to": 4, "arrows": "to"}, {"from": 5, "to": 9, "arrows": "to"}, {"from": 5, "to": 28, "arrows": "to"}, {"from": 6, "to": 5, "arrows": "to"}, {"from": 2, "to": 5, "arrows": "to"}, {"from": 1, "to": 5, "arrows": "to"}, {"from": 6, "to": 5, "arrows": "to"}, {"from": 6, "to": 9, "arrows": "to"}, {"from": 7, "to": 3, "arrows": "to"}, {"from": 8, "to": 14, "arrows": "to"}, {"from": 8, "to": 16, "arrows": "to"}, {"from": 8, "to": 15, "arrows": "to"}, {"from": 21, "to": 8, "arrows": "to"}, {"from": 9, "to": 22, "arrows": "to"}, {"from": 6, "to": 9, "arrows": "to"}, {"from": 2, "to": 9, "arrows": "to"}, {"from": 21, "to": 9, "arrows": "to"}, {"from": 1, "to": 9, "arrows": "to"}, {"from": 5, "to": 9, "arrows": "to"}, {"from": 11, "to": 12, "arrows": "to"}, {"from": 12, "to": 19, "arrows": "to"}, {"from": 11, "to": 12, "arrows": "to"}, {"from": 13, "to": 14, "arrows": "to"}, {"from": 13, "to": 16, "arrows": "to"}, {"from": 13, "to": 14, "arrows": "to"}, {"from": 31, "to": 14, "arrows": "to"}, {"from": 8, "to": 14, "arrows": "to"}, {"from": 19, "to": 14, "arrows": "to"}, {"from": 18, "to": 15, "arrows": "to"}, {"from": 18, "to": 15, "arrows": "to"}, {"from": 31, "to": 15, "arrows": "to"}, {"from": 16, "to": 14, "arrows": "to"}, {"from": 16, "to": 15, "arrows": "to"}, {"from": 31, "to": 16, "arrows": "to"}, {"from": 18, "to": 19, "arrows": "to"}, {"from": 18, "to": 15, "arrows": "to"}, {"from": 19, "to": 14, "arrows": "to"}, {"from": 19, "to": 15, "arrows": "to"}, {"from": 18, "to": 19, "arrows": "to"}, {"from": 18, "to": 19, "arrows": "to"}, {"from": 31, "to": 19, "arrows": "to"}, {"from": 20, "to": 19, "arrows": "to"}, {"from": 30, "to": 19, "arrows": "to"}, {"from": 12, "to": 19, "arrows": "to"}, {"from": 20, "to": 19, "arrows": "to"}, {"from": 20, "to": 15, "arrows": "to"}, {"from": 21, "to": 8, "arrows": "to"}, {"from": 21, "to": 9, "arrows": "to"}, {"from": 21, "to": 4, "arrows": "to"}, {"from": 21, "to": 26, "arrows": "to"}, {"from": 24, "to": 22, "arrows": "to"}, {"from": 1, "to": 22, "arrows": "to"}, {"from": 0, "to": 22, "arrows": "to"}, {"from": 24, "to": 22, "arrows": "to"}, {"from": 2, "to": 24, "arrows": "to"}, {"from": 25, "to": 26, "arrows": "to"}, {"from": 26, "to": 29, "arrows": "to"}, {"from": 27, "to": 26, "arrows": "to"}, {"from": 27, "to": 26, "arrows": "to"}, {"from": 0, "to": 27, "arrows": "to"}, {"from": 28, "to": 4, "arrows": "to"}, {"from": 2, "to": 28, "arrows": "to"}, {"from": 5, "to": 28, "arrows": "to"}, {"from": 30, "to": 19, "arrows": "to"}, {"from": 30, "to": 3, "arrows": "to"}, {"from": 30, "to": 15, "arrows": "to"}, {"from": 30, "to": 32, "arrows": "to"}, {"from": 31, "to": 19, "arrows": "to"}, {"from": 31, "to": 14, "arrows": "to"}, {"from": 31, "to": 16, "arrows": "to"}, {"from": 31, "to": 15, "arrows": "to"}, {"from": 32, "to": 23, "arrows": "to"}, {"from": 30, "to": 32, "arrows": "to"}]
}